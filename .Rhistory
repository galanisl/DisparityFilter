hippie <- read.table("hippie_v2.txt", header = F, sep = "\t", quote = "", stringsAsFactors = F, col.names = c("uA", "eA", "uB", "eB", "score", "exp"))
hippie <- hippie[, c("uA", "uB", "score", "exp")]
hippie <- hippie[!(hippie$uA == "" | hippie$uB == ""),]
pmids <- sapply(strsplit(hippie$exp, ";"), function(x) x[2])
num.exp <- sapply(strsplit(pmids, ","), function(x) length(x))
hippie$weight <- num.exp
hippie.net <- graph_from_data_frame(hippie, directed = F)
library(igraph)
hippie.net <- graph_from_data_frame(hippie, directed = F)
count_multiple(hippie.net)
sum(count_multiple(hippie.net) > 1)
class(E(hippie.net)$weight)
class(E(hippie.net)$score)
sum(count_multiple(hippie.net) == 3)
sum(count_multiple(hippie.net) > 3)
hist(count_multiple(hippie.net))
which(count_multiple(hippie.net) == 200)
which(count_multiple(hippie.net) == 199)
max(count_multiple(hippie.net))
which(count_multiple(hippie.net) == 196)
E(hippie.net)[(count_multiple(hippie.net) == 196)]
E(hippie.net)[(count_multiple(hippie.net) == 196)]$weight
hippie.net <- simplify(hippie.net, edge.attr.comb = "max")
hippie.net <- delete_vertices(hippie.net, v = which(degree(hippie.net) == 0))
disp.hippie <- disparity_measure(hippie.net)
source('~/Desktop/R_packages/DisparityFilter/disparity_filter.R')
max(degree(hippie.net))
disp.hippie <- disparity_measure(hippie.net)
null.disp <- null_disparities(seq(1, 2115, 1))
plot(degree(hippie.net), disp.hippie, pch = 16, xlab = "k", ylab = "Disp", log = "xy", xlim = c(1, 2115), ylim = c(1, 2115), main = "HIPPIE v2 (exp)")
lines(seq(1, 2115, 1), null.disp$mu + 2*null.disp$sd, col = "red") #Null model
abline(h = 1, col = "green") #Maximum homogeneity
abline(a = 0, b = 1, col = "green") #Maximum heterogeneity
lines(seq(1, 2115, 1), null.disp$mu + null.disp$sd, col = "blue") #Null model
save(disp.hippie, null.disp, hippie.net, file = "disp_hippie.RData")
load("~/Desktop/R_packages/DisparityFilter/disp_hippie.RData")
library(igraph)
plot(E(hippie.net)$weight, E(hippie.net)$score, pch = 16)
plot(E(hippie.net)$weight, E(hippie.net)$score, pch = 16, log = "x")
sum(E(hippie.net)$weight < 5)
ecount(hippie.net)
sum(E(hippie.net)$weight > 5)
sum(E(hippie.net)$weight < 3)
load("~/Desktop/R_packages/DisparityFilter/disp_hippie.RData")
scores <- E(hippie.net)$score
hist(scores)
rnd.sco <- matrix(0, nrow = length(scores), ncol = 100)
rm(hippie.net)
for(i in 1:ncol(rnd.sco)){
rnd.sco[, i] <- sample(scores, size = length(scores))
}
hist(rnd.sco[1,])
abline(v = scores[1], col = "red")
hist(rnd.sco[2,])
abline(v = scores[2], col = "red")
hist(rnd.sco[3,])
abline(v = scores[3], col = "red")
mean(rnd.sco[1,])
scores[1]
mean(rnd.sco[2,])
scores[2]
mean(rnd.sco[3,])
scores[2]
mean(rnd.sco[4,])
scores[4]
mean(rnd.sco[5,])
scores[5]
mean(scores)
for(i in 1:ncol(rnd.sco)){
rnd.sco[,i] <- runif(length(scores), min = 0, max = 1)
}
hist(rnd.sco[1,])
z_test <- function(value, random.distr){
random.mu <- mean(random.distr)
random.sd <- sd(random.distr)
z.score <- (value - random.mu) / random.sd
return(pnorm(z.score))
}
for(i in 1:ncol(rnd.sco)){
rnd.sco[, i] <- sample(scores, size = length(scores))
}
1-z_test(scores[1], rnd.sco[1,])
z_test(scores[1], rnd.sco[1,])
1-z_test(scores[2], rnd.sco[2,])
1-z_test(scores[3], rnd.sco[3,])
1-z_test(scores[4], rnd.sco[4,])
1-z_test(scores[4], rnd.sco[4,])
1-z_test(scores[5], rnd.sco[5,])
mu <- apply(rnd.sco, 1, mean)
sd <- apply(rnd.sco, 1, sd)
pval <- 1-pnorm((scores - mu)/sd)
sum(pval < 0.05)
sum(pval <= 0.05)
load("~/Desktop/R_packages/DisparityFilter/disp_hippie.RData")
g <- delete_edges(hippie.net, edges = which(pval > 0.05))
ecount(g)
vcount(g)
sum(degree(g) == 0)
rnd.sco <- matrix(0, nrow = length(scores), ncol = 1000)
for(i in 1:ncol(rnd.sco)){
rnd.sco[, i] <- sample(scores, size = length(scores))
}
mu <- apply(rnd.sco, 1, mean)
std <- apply(rnd.sco, 1, sd)
pval <- 1-pnorm((scores - mu)/std)
sum(pval <= 0.05)
norm.w <- (w - min(w))/(max(w)-min(w))
w <- E(hippie.net)$scores
norm.w <- (w - min(w))/(max(w)-min(w))
min(w)
w <- E(hippie.net)$score
norm.w <- (w - min(w))/(max(w)-min(w))
hist(norm.w)
hist(w)
hist(log(w))
hist(1+log(w))
hist(log10(w))
hist(log10(w)+1)
hist(log10(w)+2)
min(w)
max(w)
hist(w)
hist(w, breaks = 10)
sum(w == 0)
exp <- E(hippie.net)$weight
hist(exp[w == 0])
sum(exp[w == 0])
source('~/Desktop/R_packages/DisparityFilter/disparity_filter.R')
plot(E(hippie.net)$weight, E(hippie.net)$score, pch = 16, log = "xy")
plot(E(hippie.net)$weight, E(hippie.net)$score, pch = 16, log = "x")
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", stringsAsFactors = F)
heaD(exp.score)
head(exp.score)
hist(exp.score$score)
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", stringsAsFactors = F, row.names = 1)
head(exp.score)
exp.score$score[c("Affinity Capture-MS", "in vivo")]
exp.score[c("Affinity Capture-MS", "in vivo"), 2]
exp.score[c("Affinity Capture-MS", "in vivo"), "score"]
exp.score[c("Affinity Capture-MS", "in vitro"), "score"]
exp.score[c("Affinity Capture-MS", "3 hybrid method"), "score"]
hippie <- read.table("hippie_v2.txt", header = F, sep = "\t", quote = "", stringsAsFactors = F, col.names = c("uA", "eA", "uB", "eB", "score", "exp"))
hippie <- hippie[, c("uA", "uB", "score", "exp")]
hippie <- hippie[!(hippie$uA == "" | hippie$uB == ""),]
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", row.names = 1, stringsAsFactors = F)
exps <- sapply(strsplit(hippie$exp, ";"), function(x) x[1])
exp.list <- strsplit(exps, ",")
exp.list[[1]]
total.quality <- sapply(exp.list, function(x) sum(exp.score[x, "score"]))
head(total.quality)
hist(total.quality)
sum(total.quality == 0)
class(total.quality)
sum(is.na(total.quality))
head(which(is.na(total.quality)))
hippie[47, ]
exp.list[[47]]
exp.score[exp.list[[47]], "score"]
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", row.names = 1, stringsAsFactors = F)
total.quality <- sapply(exp.list, function(x) sum(exp.score[x, "score"]))
sum(is.na(total.quality))
exp.score[exp.list[[47]], "score"]
head(which(is.na(total.quality)))
exp.list[[10766]]
exp.score[exp.list[[10766]], "score"]
exp.score[exp.list[[10767]], "score"]
exp.list[[10767]]
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", row.names = 1, stringsAsFactors = F)
total.quality <- sapply(exp.list, function(x) sum(exp.score[x, "score"]))
sum(is.na(total.quality))
head(which(is.na(total.quality)))
exp.score[exp.list[[30425]], "score"]
exp.list[[30425]]
hippie[30425, ]
hippie[30426, ]
hippie[44805, ]
hippie[44847, ]
hippie[44922, ]
hippie[45315, ]
tail(which(is.na(total.quality)))
hippie[285446, ]
hippie[285513, ]
hippie$weight <- total.quality
hippie <- hippie[!is.na(total.quality), ]
hippie.net <- graph_from_data_frame(hippie, directed = F)
hippie.net <- simplify(hippie.net, edge.attr.comb = "max")
hippie.net <- delete_vertices(hippie.net, v = which(degree(hippie.net) == 0))
hist(degree(hippie.net))
hist(E(hippie.net)$weight)
max(E(hippie.net)$weight)
min(E(hippie.net)$weight)
sum(total.quality == 0)
sum(total.quality[!is.na(total.quality)] == 0)
hippie <- read.table("hippie_v2.txt", header = F, sep = "\t", quote = "", stringsAsFactors = F, col.names = c("uA", "eA", "uB", "eB", "score", "exp"))
hippie <- hippie[, c("uA", "uB", "score", "exp")]
hippie <- hippie[!(hippie$uA == "" | hippie$uB == ""),]
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", row.names = 1, stringsAsFactors = F)
#weights will correspond to number of experiments
exps <- sapply(strsplit(hippie$exp, ";"), function(x) x[1])
exp.list <- strsplit(exps, ",")
total.quality <- sapply(exp.list, function(x) sum(exp.score[x, "score"]))
hippie$weight <- total.quality
hippie <- hippie[!is.na(total.quality) | (total.quality == 0), ]
hippie.net <- graph_from_data_frame(hippie, directed = F)
is.na(hippie)
sum(is.na(hippie))
hippie <- read.table("hippie_v2.txt", header = F, sep = "\t", quote = "", stringsAsFactors = F, col.names = c("uA", "eA", "uB", "eB", "score", "exp"))
hippie <- hippie[, c("uA", "uB", "score", "exp")]
hippie <- hippie[!(hippie$uA == "" | hippie$uB == ""),]
exp.score <- read.table("experimental_scores.tsv", header = T, sep = "\t", quote = "", row.names = 1, stringsAsFactors = F)
#weights will correspond to number of experiments
exps <- sapply(strsplit(hippie$exp, ";"), function(x) x[1])
exp.list <- strsplit(exps, ",")
total.quality <- sapply(exp.list, function(x) sum(exp.score[x, "score"]))
hippie$weight <- total.quality
hippie <- hippie[!is.na(total.quality), ]
sum(is.na(hippie))
hippie <- hippie[hippie$weight>0,]
hippie.net <- graph_from_data_frame(hippie, directed = F)
hippie.net <- simplify(hippie.net, edge.attr.comb = "max")
hippie.net <- delete_vertices(hippie.net, v = which(degree(hippie.net) == 0))
min(E(hippie.net)$weight)
max(E(hippie.net)$weight)
hist(E(hippie.net)$weight)
vcount(hippie.net)
max(degree(hippie.net))
source('~/Desktop/R_packages/DisparityFilter/disparity_filter.R')
disp.hippie <- disparity_measure(hippie.net)
null.disp <- null_disparities(seq(1, 2110, 1))
plot(degree(hippie.net), disp.hippie, pch = 16, xlab = "k", ylab = "Disp", log = "xy", xlim = c(1, 2110), ylim = c(1, 2110), main = "HIPPIE v2 (exp quality)")
lines(seq(1, 2110, 1), null.disp$mu + 2*null.disp$sd, col = "red") #Null model
abline(h = 1, col = "green") #Maximum homogeneity
abline(a = 0, b = 1, col = "green") #Maximum heterogeneity
q()
source('~/Desktop/R_packages/DisparityFilter/disparity_filter.R')
load("~/Desktop/R_packages/DisparityFilter/tests.R")
load("~/Desktop/R_packages/DisparityFilter/disp_hippie.RData")
hippie.net <- disparity_filter(hippie.net)
tmp <- numeric(length = 10) - 1
tmp
tmp <- numeric(length = 10)
help(numeric)
help("vector")
library(devtools)
source('~/Desktop/R_packages/DisparityFilter/R/disparity_filter.R')
load("data/air.RData")
library(igraph)
library(ggplot2)
disp <- get_node_disparity(net = air)
plot_degree_vs_disparity(net = air, node.disp = disp)
install()
q()
